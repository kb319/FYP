clc;
clear all;
close all;

sim_days = 4;
Ts = 0.5; % 1/amount of samples per hour
n = 24/Ts*sim_days; % sim length in points
horz_length_days = 2;
%N = horz_length_days/sim_days*n; % horizon, so 48 is 24hrs

C_a = 30; % adjust so loss is around 1 degree an hour with no input at day peak
U_a = 1;

initial_indoor_temp = 15;

tspan = linspace(0,sim_days*24*60*60,n); %1 minute intervals

outdoor_temp = readtable('weather_thirtymin.csv');
outdoor_temp = table2array(outdoor_temp(1,:));
T_o = outdoor_temp(1:n);


% home RC model and discretising
T_s = 1;

A_home = -U_a/C_a;
B_home = [U_a/C_a 1/C_a];

syshome = idss(A_home,B_home,[],[],[],[],0);
syshome_disc = c2d(syshome,T_s,'zoh');

A_home_disc = syshome_disc.A;
B_home_disc = syshome_disc.B;
A = A_home_disc;
B = B_home_disc;
%initial state
x1_o = initial_indoor_temp;
disc_sim_out = [x1_o];

delay = 0;
target_indoor_temp = 21;

% doing MPC


x_size = size(A,1);
u_size = size(B,2);

N = 5;
Hval = 1000;
fval = -2*target_indoor_temp*Hval;
H = kron(eye((N+1)),Hval);
f = kron(ones(1,u_size*(N)),fval);
H = blkdiag(H,zeros(size(f,2),size(f,2)));
f = horzcat(zeros(1,N+1),f);
y = initial_indoor_temp;
yend = target_indoor_temp; 
Q_a = [];


Aeq_AI = horzcat(kron(eye(N),A),zeros(N,x_size)) - horzcat(zeros(N,x_size),kron(eye(N),eye(x_size)));
Aeq_B = kron(eye(N),B);
Aeq_base = [Aeq_AI Aeq_B];
Beq_base = [zeros(N*x_size,1)];

% setting outdoor temperature inputs as equality constraints
Aeq_temps = kron(eye(N),[1 0]);
Aeq_temps_fit = horzcat(zeros(N,N+1),Aeq_temps);

for i = 1:100
    
   Beq_temps = T_o(i+j+';
  
   Aeq = vertcat([eye(x_size),zeros(1,N*x_size+(N)*u_size)],[zeros(1,(N)*x_size),eye(x_size),zeros(1,u_size*(N))],Aeq_base,Aeq_temps_fit);
   Beq = vertcat(y, yend, Beq_base, Beq_temps);
   sols = quadprog(H,f,[],[],Aeq,Beq);
   Q_a_new = sols(N+3);
   x1_o = sols(1);

   Q_a = [Q_a Q_a_new];
   y = A*x1_o+B*[T_o(i) Q_a(i)]';

   disc_sim_out = [disc_sim_out y];

end

%plotting
hold on;
correct_x_gaps = linspace(0,sim_days*24,n);
plot(correct_x_gaps,T_o);
plot(1:101,disc_sim_out);
% making the temp and input datasets interpolatable
 